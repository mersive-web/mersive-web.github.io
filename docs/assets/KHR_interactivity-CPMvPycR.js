import{aE as F,aF as B,aG as v,aH as f,aI as y,aJ as I,aK as g,aL as _,aM as T,aN as E,aO as x,aP as R,aQ as $,aR as S,aS as O,aT as q,aU as L,aV as P,aW as V,aX as H,aY as K,aZ as A,a_ as D,a$ as M,b0 as U,b1 as z,b2 as j,b3 as J,b4 as W,b5 as Z,b6 as X,b7 as Q,b8 as Y,b9 as aa,ba as sa,bb as oa,bc as ea,bd as ta,be as na,bf as la,bg as ra,bh as ca,bi as ia,bj as ha,bk as ma,bl as pa,bm as ua,bn as da,bo as wa,bp as Ca,bq as ba,br as ka,bs as Na,bt as Ga,bu as Fa,bv as Ba,bw as va,bx as fa,by as ya,bz as Ia,bA as ga,bB as _a,bC as Ta,bD as Ea,bE as xa,bF as Ra,bG as $a,bH as Sa,bI as Oa,bJ as qa,bK as La,bL as Pa,bM as Va,bN as Ha,bO as Ka,bP as Aa,bQ as Da,bR as Ma,bS as Ua,bT as za,bU as ja,bV as Ja,bW as Wa,bX as w,bY as Za,bZ as Xa,u as Qa,r as Ya}from"./index-D2CCo2AI.js";import{G as as}from"./gltfPathToObjectConverter-CGviXP77.js";const ss={"lifecycle/onStart":Wa.ClassName,"lifecycle/onTick":Ja.ClassName,log:ja.ClassName,"flow/delay":za.ClassName,"customEvent/send":Ua.ClassName,"customEvent/receive":Ma.ClassName,"flow/sequence":Da.ClassName,"world/get":Aa.ClassName,"world/set":Ka.ClassName,"flow/doN":Ha.ClassName,"variable/get":Va.ClassName,"variable/set":Pa.ClassName,"flow/whileLoop":La.ClassName,"math/random":qa.ClassName,"math/e":Oa.ClassName,"math/pi":Sa.ClassName,"math/inf":$a.ClassName,"math/nan":Ra.ClassName,"math/abs":xa.ClassName,"math/sign":Ea.ClassName,"math/trunc":Ta.ClassName,"math/floor":_a.ClassName,"math/ceil":ga.ClassName,"math/fract":Ia.ClassName,"math/neg":ya.ClassName,"math/add":fa.ClassName,"math/sub":va.ClassName,"math/mul":Ba.ClassName,"math/div":Fa.ClassName,"math/rem":Ga.ClassName,"math/min":Na.ClassName,"math/max":ka.ClassName,"math/clamp":ba.ClassName,"math/saturate":Ca.ClassName,"math/mix":wa.ClassName,"math/eq":da.ClassName,"math/lt":ua.ClassName,"math/le":pa.ClassName,"math/gt":ma.ClassName,"math/ge":ha.ClassName,"math/isnan":ia.ClassName,"math/isinf":ca.ClassName,"math/rad":ra.ClassName,"math/deg":la.ClassName,"math/sin":na.ClassName,"math/cos":ta.ClassName,"math/tan":ea.ClassName,"math/asin":oa.ClassName,"math/acos":sa.ClassName,"math/atan":aa.ClassName,"math/atan2":Y.ClassName,"math/sinh":Q.ClassName,"math/cosh":X.ClassName,"math/tanh":Z.ClassName,"math/asinh":W.ClassName,"math/acosh":J.ClassName,"math/atanh":j.ClassName,"math/exp":z.ClassName,"math/log":U.ClassName,"math/log2":M.ClassName,"math/log10":D.ClassName,"math/sqrt":A.ClassName,"math/cbrt":K.ClassName,"math/pow":H.ClassName,"math/length":V.ClassName,"math/normalize":P.ClassName,"math/dot":L.ClassName,"math/cross":q.ClassName,"math/rotate2d":O.ClassName,"math/rotate3d":S.ClassName,"math/transpose":$.ClassName,"math/determinant":R.ClassName,"math/inverse":x.ClassName,"math/matmul":E.ClassName,"math/not":T.ClassName,"math/and":_.ClassName,"math/or":g.ClassName,"math/xor":I.ClassName,"math/asr":y.ClassName,"math/lsl":f.ClassName,"math/clz":v.ClassName,"math/ctz":B.ClassName,"math/popcnt":F.ClassName},os={float2:"Vector2",float3:"Vector3",float4:"Vector4",float4x4:"Matrix",int:"FlowGraphInteger"};function k(s,o,n){if(s.type!==void 0){const e=o.types&&o.types[s.type];if(!e)throw new Error(`${n}: Unknown type: ${s.type}`);const l=e.signature;if(!l)throw new Error(`${n}: Type ${s.type} has no signature`);const a=os[l];return{value:s.value,className:a}}else return s.value}function es(s,o,n){const e={},l=s.configuration??[];for(const a of l)if(a.id==="customEvent"){const t=o.customEvents&&o.customEvents[a.value];if(!t)throw new Error(`/extensions/KHR_interactivity/nodes/${n}: Unknown custom event: ${a.value}`);e.eventId=t.id,e.eventData=t.values.map(i=>i.id)}else if(a.id==="variable"){const t=o.variables&&o.variables[a.value];if(!t)throw new Error(`/extensions/KHR_interactivity/nodes/${n}: Unknown variable: ${a.value}`);e.variableName=t.id}else if(a.id==="path"){const t=a.value;e.path=t}else e[a.id]=k(a,o,`/extensions/KHR_interactivity/nodes/${n}`);return e}function ts(s,o,n){const e=ss[o.type];if(!e)throw new Error(`/extensions/KHR_interactivity/nodes/${s}: Unknown block type: ${o.type}`);const l=s.toString(),a=es(o,n,l),t=o.metadata;return{className:e,config:a,uniqueId:l,metadata:t,dataInputs:[],dataOutputs:[],signalInputs:[],signalOutputs:[]}}function ns(s){const o={uniqueId:w(),_userVariables:{},_connectionValues:{}},n=[o],e=[];for(let a=0;a<s.nodes.length;a++){const t=s.nodes[a],i=ts(a,t,s);e.push(i)}for(let a=0;a<s.nodes.length;a++){const t=s.nodes[a],i=e[a],N=t.flows??[];for(const r of N){const u=r.id,h={uniqueId:w(),name:u,_connectionType:1,connectedPointIds:[]};i.signalOutputs.push(h);const m=r.node,d=r.socket,p=e[m];if(!p)throw new Error(`/extensions/KHR_interactivity/nodes/${a}: Could not find node with id ${m} that connects its input with with node ${a}'s output ${u}`);let c=p.signalInputs.find(b=>b.name===d);c||(c={uniqueId:w(),name:d,_connectionType:0,connectedPointIds:[]},p.signalInputs.push(c)),c.connectedPointIds.push(h.uniqueId),h.connectedPointIds.push(c.uniqueId)}const G=t.values??[];for(const r of G){const u=r.id,h={uniqueId:w(),name:u,_connectionType:0,connectedPointIds:[]};if(i.dataInputs.push(h),r.value!==void 0){const m=k(r,s,`/extensions/KHR_interactivity/nodes/${a}`);o._connectionValues[h.uniqueId]=m}else if(r.node!==void 0&&r.socket!==void 0){const m=r.node,d=r.socket,p=e[m];if(!p)throw new Error(`/extensions/KHR_interactivity/nodes/${a}: Could not find node with id ${m} that connects its output with node${a}'s input ${u}`);let c=p.dataOutputs.find(b=>b.name===d);c||(c={uniqueId:w(),name:d,_connectionType:1,connectedPointIds:[]},p.dataOutputs.push(c)),h.connectedPointIds.push(c.uniqueId),c.connectedPointIds.push(h.uniqueId)}else throw new Error(`/extensions/KHR_interactivity/nodes/${a}: Invalid socket ${u} in node ${a}`)}}const l=s.variables??[];for(let a=0;a<l.length;a++){const t=l[a],i=t.id;o._userVariables[i]=k(t,s,`/extensions/KHR_interactivity/variables/${a}`)}return{allBlocks:e,executionContexts:n}}class ls extends as{constructor(o){super(o,cs)}}const rs={__array__:{__target__:!0,translation:{type:"Vector3",get:s=>s._babylonTransformNode.position,set:(s,o)=>{const n=o._babylonTransformNode;n.position=s},getObject(s){return s._babylonTransformNode}}}},cs={nodes:rs},C="KHR_interactivity";class is{constructor(o){this._loader=o,this.name=C,this.enabled=this._loader.isExtensionUsed(C),this._pathConverter=new ls(this._loader.gltf)}dispose(){this._loader=null,delete this._pathConverter}onReady(){var a;if(!this._loader.babylonScene||!this._pathConverter)return;const o=this._loader.babylonScene,n=(a=this._loader.gltf.extensions)==null?void 0:a.KHR_interactivity,e=ns(n),l=new Za({scene:o});Xa.Parse(e,{coordinator:l,pathConverter:this._pathConverter}),l.start()}}Qa(C);Ya(C,!0,s=>new is(s));export{is as KHR_interactivity};
